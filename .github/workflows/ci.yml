name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Важно для корректного анализа покрытия кода

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore PlagiarismChecker.sln

    - name: Build solution
      run: dotnet build PlagiarismChecker.sln --no-restore --configuration Release

    - name: Run tests and collect coverage
      run: |
        mkdir -p "$GITHUB_WORKSPACE/coverage"
        dotnet test FileStorageService.Tests/FileStorageService.Tests.csproj --no-build --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=opencover \
          /p:CoverletOutput="$GITHUB_WORKSPACE/coverage/fss_coverage.opencover.xml" \
          /p:ExcludeByFile="**/*Migrations/*.cs"
        dotnet test FileAnalysisService.Tests/FileAnalysisService.Tests.csproj --no-build --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=opencover \
          /p:CoverletOutput="$GITHUB_WORKSPACE/coverage/fas_coverage.opencover.xml" \
          /p:ExcludeByFile="**/*Migrations/*.cs"
        echo "Listing files in $GITHUB_WORKSPACE/coverage:"
        ls -R "$GITHUB_WORKSPACE/coverage"
      shell: bash

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/
        fail_ci_if_error: true
    
    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
      
    - name: Merge coverage reports and generate summary
      run: |
        reportgenerator -reports:"./coverage/*.xml" -targetdir:"./coveragereport" -reporttypes:"Html;TextSummary"
        cat ./coveragereport/Summary.txt
        
    - name: Check coverage threshold (65%)
      run: |
        COVERAGE=$(cat ./coveragereport/Summary.txt | grep -o "Line coverage: [0-9.]*%" | grep -o "[0-9.]*")
        echo "Line coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 65" | bc -l) )); then
          echo "Coverage below threshold: $COVERAGE% < 65%"
          exit 1
        else
          echo "Coverage satisfies threshold: $COVERAGE% >= 65%"
        fi
      shell: bash
